Для решения данной задачи мы использовали:
Для полёта - функцию navigate_wait(), которая принимает координаты и ожидает прилёта в заданную точку.
Для ожидания посадки и дизарма коптера - функцию land_wait().
Для распознавания QR-кода - библиотеку pyzbar.
Для распознавания и обводки повреждений, разливов и нефтепровода - библиотеку cv2.


Алгоритм обработки изображения (image_callback()):
Определяем цветовые диапазоны нефтепровода, разливов, повреждений.
Преобразуем изображение, полученное с камеры, в HSV-изображение
Применяем к нему цветокоррекцию с заранее подобранными цветовыми диапазонами.
Если на изображении есть нефтепровод, то инвертируем изображение и ищем повреждение внутри нефтепровода по минимальной площади пятна.
Обводим повреждение по контуру и выводим полученное изображение в /defect_detect.
Если повреждение находится приблизительно в центре изображения, запоминаем текущие координаты коптера.
Проверяем, есть ли в списке координат повреждений координаты близкие к этим. Если нет, запоминаем их.
Ищем на изображении разливы. Обводим их и выводим полученное изображение в /oil_detect.
Если перед этим мы распознали повреждение, близкое к нам, то рассчитываем площадь разлива, умножая площадь разлива в пикселях на отношение квадрат k. (k - отношение ширины трубопровода в метрах к ширине трубопровода в пикселях)
При необходимости записываем в список номер, координаты повреждения и площадь разлива (или 0).
Для полета по нефтепроводу мы использовали ПИД регулятор. Мы считаем ошибки по Yaw(отколнение от нужного угла) , Y(отклонения от трубопровода), Z(отколонение от нужной высоты) для того чтобы удерживать коптер над нефтепроводом, поворачивать по нему, и держать на нужной высоте, все это работает при помощи ПИД регулятора.
